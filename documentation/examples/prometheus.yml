# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  external_labels:
    _stackdriver_project_id: 'prometheus-to-sd'
    _kubernetes_cluster_name: 'prom-test-cluster-1'
    _kubernetes_location: 'us-central1-a'
    __meta_kubernetes_namespace: 'stackdriver'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

remote_write:
- url: "https://monitoring.googleapis.com:443/"
  queue_config:
    # Capacity should be 2*max_samples_per_send.
    capacity: 400
    # TODO(jkohen): uncomment once manager.go supports counters, otherwise partial request failures will cause no points to be written.
    max_samples_per_send: 1 # 200
    max_shards: 10000
  write_relabel_configs:
  # These labels are generally redundant with the Stackdriver monitored resource labels.
  - source_labels: [job]
    target_label: __meta_kubernetes_pod_container_name
  - source_labels: [instance]
    target_label: __meta_kubernetes_pod_name
  - source_labels: [job]
    target_label: _kubernetes_pod_container_name
  - source_labels: [instance]
    target_label: _kubernetes_pod_name
  - source_labels: [job]
    target_label: job
    replacement: ""
  - source_labels: [instance]
    target_label: instance
    replacement: ""
