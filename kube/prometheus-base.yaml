apiVersion: v1
kind: Namespace
metadata:
  name: ${KUBE_NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: ${KUBE_NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: ${KUBE_NAMESPACE}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus-meta
  name: prometheus-meta
  namespace: ${KUBE_NAMESPACE}
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
  - name: prometheus
    nodePort: 32387
    port: 9090
    protocol: TCP
    targetPort: 9090
  - name: sidecar
    nodePort: 30182
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app: prometheus
    prometheus: meta
  sessionAffinity: None
